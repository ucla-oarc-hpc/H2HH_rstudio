---
title: "Using RStudio on Hoffman2"
subtitle: "Hoffman2 Happy Hour"
author: "Charles Peterson"
format: 
  revealjs: 
    transition: slide
    theme: [custom.scss]
    scrollable: true
    self-contained: true
from: markdown+emoji
---

## üéâ Welcome to Hoffman2 Happy Hours

::: {style="font-size: 1.2em"}

:tada: Welcome to the Hoffman2 Happy Hours

:::
::: {style="font-size: 0.80em"}

- Short presentations on HPC-related topics and practical uses of Hoffman2

:::: {.columns}
::: {.column}

- Thoughts for future "Happy Hour" topics? :bulb:

:email: cpeterson@oarc.ucla.edu

:::
:::: {.column}

<p align="center"> <img src="fullpic.png" width="30%"> </p> 

:::
::::
:::

## :open_book: Access the Workshop Files

::: {style="font-size: 0.75em" }

This presentation and accompanying materials are available on UCLA OARC GitHub Repository :link: [https://github.com/ucla-oarc-hpc](https://github.com/ucla-oarc-hpc)

You can view the slides:

- :page_facing_up: PDF format - WS_H2HH-Rstudio.pdf
- :globe_with_meridians: HTML Workshop Slides [https://ucla-oarc-hpc.github.io/H2HH_rstudio](https://ucla-oarc-hpc.github.io/H2HH_rstudio)
- :movie_camera: Recordings can be found on our [BOX account](https://ucla.box.com/s/6fsinqhvsv3ywf9wmg30565iw7l8wvt1)

:::: {.columns}
::: {.column width="35%"}

Clone the repository for workshop files:

:::
::: {.column width="65%"}
```{.bash}
git clone https://github.com/ucla-oarc-hpc/H2HH_rstudio
```

:::
::::

:::: {.columns}
::: {.column width="35%"}

Clone the H2 Rstudio repository:

:::
::: {.column width="65%"}

```{.bash}
git clone https://github.com/ucla-oarc-hpc/H2-RStudio
```

:::
::::

:::

# RStudio Information

## üñ•Ô∏è What is Rstudio

::: {style="font-size: 0.75em"}

A powerful IDE for R, data visualization, and script management

<p align="center"> <img src="rstudio.png" width="40%"> </p> 

:::: {.columns}

::: {.column style="text-align: center" .fragment}
<br>
But why do you want to use RStudio on Hoffman2 when you can use your own computer???

:::
::: {.column style="text-align: center" .fragment}

RStudio on Hoffman2 provides access to:

- Higher Memory
- multi-core processing
- GPUs  
- Your Hoffman2-hosted data

:::
::::
:::

## üåê  RStudio Formats

There are two main (free) RStudio formats that researchers can use

::: {style="font-size: 0.75em"}
:::: {.columns}
::: {.column .fragment}

### üñ•Ô∏è RStudio Desktop

- Standalone desktop application

- Runs locally on the machine running R

- [Hoffman2 information on Desktop version](https://www.hoffman2.idre.ucla.edu/Using-H2/Software/Software.html#rstudio-ide)

:::
::: {.column .fragment}

### üåê RStudio Server

- Run RStudio as a server process 
- Runs R on a remote server
- Connect to server and open on a web browser
- [Hoffman2 information on Server version](https://www.hoffman2.idre.ucla.edu/Using-H2/Software/Software.html#rstudio-server)

:::
::::
:::

## üöÄ RStudio on Hoffman2

::: { style="font-size: 0.75em" }
:::: {.columns}
::: {.column }

**RStudio Desktop** 

- Must connect to H2 via X11 forwarding or remote desktop
- Runs R and Rstudio from H2 modules
- sluggish interaction depending on connection

:::
::: {.column .fragment}


**RStudio Server** 

- R/Rstudio from Docker container
  - Ran with Apptainer
  - [Workshop on using containers on Hoffman2](https://github.com/ucla-oarc-hpc/WS_containers)
  
- Isolate container OS image 
  - Separate version of R that was built from Hoffman2 modules
  - **DON'T load R modules for server version

:::
::::
:::

# Running Rstudio Desktop

## üñ•Ô∏è Connect via X11

::: { style="font-size: 0.75em" }

Login to Hoffman2 via [X11 Forwarding](https://www.hoffman2.idre.ucla.edu/Using-H2/Connecting/Connecting.html#opening-gui-applications)

- On your local machine, ensure you have an X11-enabled application installed:
  - Windows: Use MobaXterm, XMing, or Cygwin. For WSL, install an X server like VcXsrv or XMing.
  - macOS: Install and launch XQuartz.
  - Linux: Ensure X11 forwarding is enabled on your terminal.

:::: {.columns}
::: {.column }

- Use the following command to login to Hoffman2 with X11 Forwarding:

::: 
::: {.column }

```{.bash}
ssh -X USER@hoffman2.idre.ucla.edu
```

:::
::::

The -X flag enables your local computer‚Äôs X11 server to display the RStudio GUI.

:::

## üîó  Connect via Remote Desktop

::: { style="font-size: 0.85em" }

Connect via [Remote Desktop](https://www.hoffman2.idre.ucla.edu/Using-H2/Connecting/Connecting.html#connecting-via-remote-desktop)

- Alternatively, you can use a remote desktop application:
 - NoMachine or X2Go: Configure the session with the correct server address and login credentials. Set the desktop resolution and environment based on your preferences.

Information on using X11 and Remote Desktop on Hoffman2 can be found on our workshop [Visualization application on HPC](https://github.com/ucla-oarc-hpc/WS_VisualizationHPC)

:::

## üìú  Running Rstudio Desktop

::: { style="font-size: 0.85em" }

Once connected to Hoffman2 via X11 or Remote Desktop,

:::: {.columns}
::: {.column }

- Start an interactive session to request resources:

::: 
::: {.column }

```{.bash}
qrsh -l h_data=10G,h_rt=1:00:00
```

:::
::::
:::: {.columns}
::: {.column }

- Load the necessary modules:
	
::: 
::: {.column }

```{.bash}
module gcc/10.2.0
module R/4.2.0
module load Rstudio
```

:::
::::
:::: {.columns}
::: {.column }

- Launch RStudio:

::: 
::: {.column }

```{.bash}
module load Rstudio
rstudio &
```

:::
::::

If everything is set up correctly, the RStudio GUI will appear on your local computer or remote desktop.

:::

# Running Rstudio Server

## üõ†Ô∏è Starting RStudio 

### Get An Interactive Job

::: {style="font-size: 0.85em"}

:::: {.columns}
::: {.column}
Containers cannot run on login nodes. 

- You **MUST** use a compute node
  
:::
::: {.column}

<br>

```{.bash}
qrsh -l h_data=10G
```

:::
::::

::: {.fragment}

Modify the qrsh to meet your RStudio computing needs

::: {.fragment}
:::: {.columns}
::: {.column}

- More memory and/or job time

:::
::: {.column}

```{.bash}
qrsh -l h_data=50G,h_rt=5:00:00
```

:::
::::
:::
::: {.fragment}
:::: {.columns}
::: {.column}

- More cores

:::
::: {.column}

```{.bash}
qrsh -l h_data=10G -pe shared 10
```

:::
::::
:::
::: {.fragment}
:::: {.columns}
::: {.column}

- Using GPUs

:::
::: {.column}

```{.bash}
qrsh -l h_data=10G,gpu,V100
```

:::
::::
:::
:::
:::

## üõ†Ô∏è Setting up directoreis

### Create Temp Directories

- Rstudio requires writable temporary directories outside of the container

- It can be anywhere you have write access

:::: {.columns}
::: {.column width="40%"}

- Create directories in `$SCRATCH/rstudiotmp`
  
:::
::: {.column width="60%"}
<br>
<br>
```{.bash}
mkdir -pv $SCRATCH/rstudiotmp/{var/lib,var/run,tmp}
```
:::
::::


## üõ†Ô∏è Loading RStudio

### Load the Apptainer Module

::: {style="font-size: 0.85em"}

:::: {.columns}
::: {.column}
- Apptainer is software that will run the Rstudio container
:::
::: {.column}
<br>
```{.bash}
module load apptainer
```
:::
::::

RStudio Server on Hoffman2 created from Docker

- Separate R from modules on Hoffman2
  - DO NOT load R modules
  - R packages may need to be reinstalled

:::

## üõ†Ô∏è Starting RStudio

::: { style="font-size: 0.60em" }

:::: {.columns}
::: {.column}

<br>
<br>

```{.bash}
export RSTUDIO_VERSION=4.1.0
apptainer run \
      -B $SCRATCH/rstudiotmp/var/lib:/var/lib/rstudio-server \
      -B $SCRATCH/rstudiotmp/var/run:/var/run/rstudio-server \
      -B $SCRATCH/rstudiotmp/tmp:/tmp \
         $H2_CONTAINER_LOC/h2-rstudio_${RSTUDIO_VERSION}.sif
```

:::
::: {.column}

- `apptainer run`
  - Starts the RStudio container
- `-B $SCRATCH/rstudiotmp/[dir]:[/dir]`
  - Mounts tmp directories to the container
- `$H2_CONTAINER_LOC/h2-rstudio_4.1.0.sif`
  - Location of RStudio container
  - Can be change to different RStudio versions

:::
::::
:::: {.columns}
::: {.column}

- Information will display about RStudio session
  - Note the **compute node name** and **port number**. 
  - Displays `ssh -N -L ...` info to be ran
  - You will see a Rstudio **Password**
    - Needed to open Rstudio

::: 
::: {.column}

::: {.callout-note}
**KEEP THIS TERMINAL OPEN UNTIL YOU JOB IS DONE**
:::
:::
::::
:::

## üõ†Ô∏è Connecting to Rstudio 

Once Rstudio process is started:

::: { style="font-size: 0.75em" }

- Open another terminal on your local computer

- Run the port forward command 
  - Creates a connection from local computer to compute node

:::: {.columns}
::: {.column}

- Change port `8787` if needed
- `nXXX` is the compute node name
- `username` is your Hoffman2 username

:::
::: {.column}
```{.bash}
ssh  -N -L 8787:nXXX:8787 username@hoffman2.idre.ucla.edu 
```
:::
::::

This will create a remote ssh connection from your local computer to the Hoffman2 compute node running Rstudio via port `8787`

:::

## üõ†Ô∏è Opening RStudio 

::: { style="font-size: 0.80em" }

:::: {.columns}
::: {.column}

- Finally, open a web browser
  - Type URL of RStudio Server
  - Will ALWAYS be localhost
  - Change port `8787` if needed

::: 
::: {.column}

<br>
<br>
<br>

```{.bash}
http://localhost:8787
```

:::
::::
:::

## :zap: Running Rstudio - The Easy Way

::: { style="font-size: 0.50em" }
:::: {.columns}
::: {.column}

- `h2_rstudio.sh`
  - Script that runs everything from the previous slide
  - Starts Rstudio and opens a web browser for you
  - Runs on your **local computer** (not Hoffman2)
  
:::
::: {.column}
::: {.callout-note title="h2-studio.sh Information"}

Look at our [Github page](https://github.com/ucla-oarc-hpc/H2-RStudio)

:::
:::
::::
:::: {.columns}
::: {.column}

- Download script

:::
::: {.column}

```{.bash }
wget https://raw.githubusercontent.com/ucla-oarc-hpc/H2-RStudio/main/h2_rstudio.sh
chmod +x h2_rstudio.sh
```

:::
::::
:::: {.columns}
::: {.column}

- To display how to use this script

:::
::: {.column}

```{.bash}
./h2_rstudio.sh -h
```

:::
::::
:::: {.columns}
::: {.column}

- Run script 
  - Replace `username` with Hoffman2 username

:::
::: {.column}

```{.bash}
./h2_rstudio.sh -u username
```

:::
::::
::: {.callout-caution title="Tested Platforms"}

:white_check_mark: Mac's terminal app

:white_check_mark: Window's WSL2

:white_check_mark: MoboXterm

:x: GitBash

:::
:::

## üìù  RStudio Script

::: { style="font-size: 0.70em" }

:::{ style="text-align: center" }

![](rstudio_script.gif)
:::

This RStudio Script is currently on our [GitHub page](https://github.com/ucla-oarc-hpc/H2-RStudio)

```{.bash}
This script will create an RStudio session on a compute node on Hoffman2.

REQUIRED OPTIONS:
  -u [username]    Your Hoffman2 username (mandatory)

OPTIONAL PARAMETERS:
  -m [MEMORY]     Memory requirements in GB (default: 10 GB)
  -t [TIME]       Time of RStudio job in HH:MM:SS (default: 2:00:00)
  -v [VERSION]    RStudio version (default: 4.1.0)
  -p              Request high-priority queue (highp)
  -g [GPUTYPE]    Request GPU resources, where GPUTYPE can be 'V100', 'A100', A6000, etc.

HELP:
  -h              Show this usage message
```

:::

## üì¶ Info on RStudio Container 

::: { style="font-size: 0.80em" }

- Rstudio container was built using Docker
  - Based on RStudio images from the [Rocker Project](https://www.rocker-project.org)
  - Hoffman2 containers located at `$H2_CONTAINER_LOC`
  - RStudio containers are named: 
    - `h2-rstudio_X.Y.Z.sif`
    - Where `X.Y.Z` is the R version

- View all available RStudio containers by running

```{.bash}
module load apptainer
ls $H2_CONTAINER_LOC/h2-rstudio*sif
```

:::

## üìç User Packages

::: { style="font-size: 0.80em" }

-  Separate build of R and 
  - R packages installed in unique directory
    - `~/R/APPTAINER/h2-rstudio_4.1.0` (for h2_rstudio-4.1.0.sif)

- [HPC Container files](https://github.com/ucla-oarc-hpc/hpc_containers)
  - Docker and definition files for Hoffman2 containers
  - RStudio Dockerfiles have all you need to build RStudio

::: {.callout-tip title="R Package Installs"}

- Some R packages require extra libraries or software in the container
- Contact us to update this container 
  - **OR** you can modify the Dockerfile for your own container
  
:::
:::

##  üõ†Ô∏è  Error fixing

- If Rstudio does not at start up
  - Possibly due to previous RStudio not shutdown correctly
  
- Clear out any tmp directories files 

```{.bash}
rm -rf $SCRATCH/rstudiotmp 
mkdir -pv $SCRATCH/rstudiotmp/{var/lib,var/run,tmp}
```

- Clear out RStudio config files
  
```{.bash}
rm -rf $HOME/.config/rstudio
rm -rf $HOME/.local/share/rstudio
```

## üñ•Ô∏è  Terminal Access

- Access to a Hoffman2 terminal in RStudio

![](rstudio_terminal.gif)

## üìä  Using Batch R

::: { style="font-size: 0.70em" }

- Instead of interactive RStudio, you can run R as a non-interactive batch job
  - Use R from inside RStudio container as a qsub job


- Create job script

```{.bash}
#!/bin/bash
#$ -cwd
#$ -o rstudio_batch.out.$JOB_ID
#$ -j y
#$ -l h_rt=3:00:00,h_data=10G
#$ -pe shared 1

# Load the apptainer module
. /u/local/Modules/default/init/modules.sh
module load apptainer

# R Version
export RSTUDIO_VER=4.4.0

# Use the RStudio container to run R code
apptainer run $H2_CONTAINER_LOC/h2-rstudio_${RSTUDIO_VER}.sif R CMD BATCH myRtest.R
```


:::: {.columns}
::: {.column}

- Then run this job script

:::
::: {.column}

```{.bash}
qsub rstudio_batch.job
```

:::
::::
:::

## üìù  Summary

- RStudio Desktop on Hoffman2 
  - Connect via X11/Remote Desktop
  - Runs R from H2 modules

- RStudio Server on Hoffman2 
  - Access through on your web browser
  - Runs R from inside containers


## üôè Thanks and Happy Computing!

::: { style="font-size: 0.70em" }

Questions? Comments?

- :email: [cpeterson\@oarc.ucla.edu](mailto:cpeterson@oarc.ucla.edu){.email}

- Look at for more [Hoffman2 workshops](https://idre.ucla.edu/calendar) and other OARC workshops

:::{ style="text-align: center" }
<p align = "center"> <img src="cat.png" width="40%" height="40%"> </p> 
:::
:::
